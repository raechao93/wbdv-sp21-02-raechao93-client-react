{"ast":null,"code":"var _jsxFileName = \"/Users/apple/wbdv-sp21-cr-client-react/src/components/course-manager.js\";\nimport React from 'react';\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport { Link, Route } from \"react-router-dom\";\nimport courseService, { findAllCourses, deleteCourse } from \"../services/course-service\";\nimport './course-manager-style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CourseManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courses: [],\n      qwe: 123,\n      sdf: 456\n    };\n\n    this.updateCourse = course => {\n      console.log(course);\n      courseService.updateCourse(course._id, course).then(status => this.setState(prevState => ({ ...prevState,\n        courses: prevState.courses.map(c => c._id === course._id ? course : c) // courses: prevState.courses.map(c => {\n        //   if(c._id === course._id) {\n        //     return course\n        //   } else {\n        //     return c\n        //   }\n        // })\n\n      })));\n    };\n\n    this.componentDidMount = () => // findAllCourses()\n    //     .then(actualCourses => this.setState({\n    //       courses: actualCourses\n    //     }))\n    findAllCourses().then(courses => this.setState({\n      courses\n    }));\n\n    this.addCourse = () => {\n      const newCourse = {\n        title: \"New Course\",\n        owner: \"New Owner\",\n        lastModified: \"Never\"\n      };\n      courseService.createCourse(newCourse).then(course => this.setState(prevState => ({ ...prevState,\n        courses: [...prevState.courses, course]\n      }))); // this.state.courses.push(newCourse)\n      // this.setState(this.state)\n    };\n\n    this.deleteCourse = courseToDelete => {\n      courseService.deleteCourse(courseToDelete._id).then(status => {\n        // const newCourses = this.state.courses\n        //     .filter(course => course !== courseToDelete)\n        // this.setState({\n        //   courses: newCourses\n        // })\n        // this.setState((prevState) => {\n        //   // let nextState = {...prevState}\n        //   // nextState.courses =\n        //   //     prevState\n        //   //         .courses\n        //   //         .filter(course => course !== courseToDelete)\n        //\n        //   let nextState = {\n        //     ...prevState,\n        //     courses: prevState.courses.filter\n        //               (course => course !== courseToDelete)\n        //   }\n        //\n        //   return nextState\n        // })\n        this.setState(prevState => ({ ...prevState,\n          courses: prevState.courses.filter(course => course !== courseToDelete)\n        }));\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-2x fa-home float-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Course Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addCourse,\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/table\",\n        children: /*#__PURE__*/_jsxDEV(CourseTable, {\n          updateCourse: this.updateCourse,\n          deleteCourse: this.deleteCourse,\n          courses: this.state.courses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/grid\",\n        children: /*#__PURE__*/_jsxDEV(CourseGrid, {\n          deleteCourse: this.deleteCourse,\n          courses: this.state.courses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: [\"/courses/editor/:courseId\", \"/courses/editor/:courseId/:moduleId\", \"/courses/editor/:courseId/:moduleId/:lessonId\"],\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(CourseEditor, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CourseManager;","map":{"version":3,"sources":["/Users/apple/wbdv-sp21-cr-client-react/src/components/course-manager.js"],"names":["React","CourseTable","CourseGrid","CourseEditor","Link","Route","courseService","findAllCourses","deleteCourse","CourseManager","Component","state","courses","qwe","sdf","updateCourse","course","console","log","_id","then","status","setState","prevState","map","c","componentDidMount","addCourse","newCourse","title","owner","lastModified","createCourse","courseToDelete","filter","render","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport {Link, Route} from \"react-router-dom\";\nimport courseService, {findAllCourses, deleteCourse} from \"../services/course-service\";\nimport './course-manager-style.css'\n\n\nclass CourseManager extends React.Component {\n    state = {\n        courses: [],\n        qwe: 123,\n        sdf: 456\n    }\n\n    updateCourse = (course) => {\n        console.log(course)\n        courseService.updateCourse(course._id, course)\n            .then(status => this.setState((prevState) => ({\n                ...prevState,\n                courses: prevState.courses.map(\n                    (c) => c._id === course._id ? course : c)\n\n                // courses: prevState.courses.map(c => {\n                //   if(c._id === course._id) {\n                //     return course\n                //   } else {\n                //     return c\n                //   }\n                // })\n            })))\n    }\n\n    componentDidMount = () =>\n        // findAllCourses()\n        //     .then(actualCourses => this.setState({\n        //       courses: actualCourses\n        //     }))\n        findAllCourses()\n            .then(courses => this.setState({courses}))\n\n    addCourse = () => {\n        const newCourse = {\n            title: \"New Course\",\n            owner: \"New Owner\",\n            lastModified: \"Never\"\n        }\n        courseService.createCourse(newCourse)\n            .then(course => this.setState(\n                (prevState) => ({\n                    ...prevState,\n                    courses: [\n                        ...prevState.courses,\n                        course\n                    ]\n                })))\n\n        // this.state.courses.push(newCourse)\n        // this.setState(this.state)\n    }\n\n    deleteCourse = (courseToDelete) => {\n        courseService.deleteCourse(courseToDelete._id)\n            .then(status => {\n                // const newCourses = this.state.courses\n                //     .filter(course => course !== courseToDelete)\n                // this.setState({\n                //   courses: newCourses\n                // })\n                // this.setState((prevState) => {\n                //   // let nextState = {...prevState}\n                //   // nextState.courses =\n                //   //     prevState\n                //   //         .courses\n                //   //         .filter(course => course !== courseToDelete)\n                //\n                //   let nextState = {\n                //     ...prevState,\n                //     courses: prevState.courses.filter\n                //               (course => course !== courseToDelete)\n                //   }\n                //\n                //   return nextState\n                // })\n\n                this.setState((prevState) => ({\n                    ...prevState,\n                    courses: prevState.courses.filter\n                    (course => course !== courseToDelete)\n                }))\n            })\n    }\n\n    render() {\n        return(\n            <div>\n                <Link to=\"/\">\n                    <i className=\"fas fa-2x fa-home float-right\"></i>\n                </Link>\n                <h1>Course Manager</h1>\n                <button onClick={this.addCourse}>Add Course</button>\n                <Route path=\"/courses/table\">\n                    <CourseTable\n                        updateCourse={this.updateCourse}\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </Route>\n                <Route path=\"/courses/grid\">\n                    <CourseGrid\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </Route>\n    \n                <Route path={[\n                    \"/courses/editor/:courseId\",\n                    \"/courses/editor/:courseId/:moduleId\",\n                    \"/courses/editor/:courseId/:moduleId/:lessonId\"]}\n                       exact={true}\n                       render={(props) => <CourseEditor {...props}/>}>\n                </Route>\n\n\n            </div>\n        )\n    }\n}\n\nexport default CourseManager"]},"metadata":{},"sourceType":"module"}