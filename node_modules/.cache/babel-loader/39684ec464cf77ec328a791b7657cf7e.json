{"ast":null,"code":"var _jsxFileName = \"/Users/apple/wbdv-sp21-cr-client-react/src/components/course-manager.js\";\nimport React from 'react';\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport { Route } from \"react-router-dom\";\nimport courseService, { findAllCourses, deleteCourse } from \"../services/course-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CourseManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courses: [// {title:\"CS5210\", owner:\"me\", lastModified:\"1/1/2021\"},\n        // {title:\"CS5310\", owner:\"you\", lastModified:\"2/1/2021\"},\n        // {title:\"CS5410\", owner:\"him\", lastModified:\"3/1/2021\"},\n        // {title:\"CS5510\", owner:\"her\", lastModified:\"4/1/2021\"},\n        // {title:\"CS5610\", owner:\"us\", lastModified:\"1/1/2021\"},\n        // {title:\"CS5710\", owner:\"me\", lastModified:\"1/2/2021\"}\n      ]\n    };\n\n    this.updateCourse = course => {\n      console.log(course);\n      courseService.updateCourse(course._id, course).then(status => this.setState(prevState => ({ ...prevState,\n        courses: prevState.courses.map(c => {\n          if (c._id === course._id) {\n            return course;\n          } else {\n            return c;\n          }\n        })\n      })));\n    };\n\n    this.componentDidMount = () => // findAllCourses().then(actualCourses => this.setState({\n    //     courses: actualCourses\n    // }))\n    findAllCourses().then(courses => this.setState({\n      courses\n    }));\n\n    this.addCourse = () => {\n      alert('DAMNNN!!!Coding Is Your Passion!!!');\n      const newCourse = {\n        title: \"New Course\",\n        owner: \"Me\",\n        lastModified: \"1/1/2021\"\n      };\n      courseService.createCourse(newCourse).then(course => this.setState(prevState => ({ ...prevState,\n        courses: [...prevState.courses, course]\n      }))); // this.state.courses.push(newCourse)\n      // this.setState(this.state)\n    };\n\n    this.deleteCourse = courseToDelete => {\n      // console.log(course)\n      courseService.deleteCourse(courseToDelete._id).then(status => {\n        // const newCourses = this.state.courses\n        //     .filter(course => course !== courseToDelete)\n        // this.setState({\n        //     courses: newCourses\n        // })\n        this.setState(prevState => {\n          let nextState = { ...prevState\n          };\n          nextState.courses = prevState.courses.filter(course => course !== courseToDelete);\n          return nextState;\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Course Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addCourse,\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/table\",\n        children: /*#__PURE__*/_jsxDEV(CourseTable, {\n          updateCourse: this.updateCourse,\n          deleteCourse: this.deleteCourse,\n          courses: this.state.courses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/grid\",\n        children: /*#__PURE__*/_jsxDEV(CourseGrid, {\n          deleteCourse: this.deleteCourse,\n          courses: this.state.courses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/courses/editor\",\n        render: props => {\n          return /*#__PURE__*/_jsxDEV(CourseEditor, {\n            courses: this.state.courses,\n            props: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 35\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CourseManager;","map":{"version":3,"sources":["/Users/apple/wbdv-sp21-cr-client-react/src/components/course-manager.js"],"names":["React","CourseTable","CourseGrid","CourseEditor","Route","courseService","findAllCourses","deleteCourse","CourseManager","Component","state","courses","updateCourse","course","console","log","_id","then","status","setState","prevState","map","c","componentDidMount","addCourse","alert","newCourse","title","owner","lastModified","createCourse","courseToDelete","nextState","filter","render","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CourseTable from \"./course-table\";\nimport CourseGrid from \"./course-grid\";\nimport CourseEditor from \"./course-editor\";\nimport {Route} from \"react-router-dom\";\nimport courseService, {findAllCourses, deleteCourse} from \"../services/course-service\";\n\nclass CourseManager extends React.Component{\n    state = {\n        courses: [\n\n            // {title:\"CS5210\", owner:\"me\", lastModified:\"1/1/2021\"},\n            // {title:\"CS5310\", owner:\"you\", lastModified:\"2/1/2021\"},\n            // {title:\"CS5410\", owner:\"him\", lastModified:\"3/1/2021\"},\n            // {title:\"CS5510\", owner:\"her\", lastModified:\"4/1/2021\"},\n            // {title:\"CS5610\", owner:\"us\", lastModified:\"1/1/2021\"},\n            // {title:\"CS5710\", owner:\"me\", lastModified:\"1/2/2021\"}\n        ]\n    }\n\n    updateCourse = (course) =>{\n        console.log(course)\n        courseService.updateCourse(course._id, course)\n            .then(status => this.setState((prevState) => ({\n                ...prevState,\n                courses: prevState.courses.map(c => {\n                    if(c._id === course._id){\n                        return course\n                    } else{\n                        return c\n                    }\n                })\n            })))\n    }\n\n    componentDidMount = () =>\n        // findAllCourses().then(actualCourses => this.setState({\n        //     courses: actualCourses\n        // }))\n\n        findAllCourses().then(courses => this.setState({courses}))\n\n\n    addCourse = () =>{\n        alert('DAMNNN!!!Coding Is Your Passion!!!')\n\n        const newCourse ={\n            title:\"New Course\",\n            owner:\"Me\",\n            lastModified:\"1/1/2021\"\n        }\n        courseService.createCourse(newCourse)\n            .then(course => this.setState((prevState) => ({\n                ...prevState,\n                courses: [\n                    ...prevState.courses,\n                    course\n                ]\n            })))\n\n        // this.state.courses.push(newCourse)\n        // this.setState(this.state)\n    }\n\n    deleteCourse = (courseToDelete) => {\n        // console.log(course)\n\n        courseService.deleteCourse(courseToDelete._id).then(status => {\n            // const newCourses = this.state.courses\n            //     .filter(course => course !== courseToDelete)\n            // this.setState({\n            //     courses: newCourses\n            // })\n\n            this.setState((prevState) => {\n                let nextState = {...prevState}\n                nextState.courses =\n                    prevState\n                        .courses\n                        .filter(course => course !== courseToDelete)\n                return nextState\n            })\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Course Manager</h1>\n                <button onClick={this.addCourse}>Add Course</button>\n\n                <Route path=\"/courses/table\">\n                    <CourseTable\n                        updateCourse={this.updateCourse}\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </Route>\n\n                <Route path=\"/courses/grid\">\n                <CourseGrid\n                    deleteCourse={this.deleteCourse}\n                    courses={this.state.courses}/>\n                </Route>\n\n                <Route path=\"/courses/editor\"\n                       render={(props) => {\n                           return <CourseEditor\n                               courses={this.state.courses} props={props}/>\n                       }}>\n                </Route>\n\n            </div>\n        )\n    }\n\n}\nexport default CourseManager"]},"metadata":{},"sourceType":"module"}