{"ast":null,"code":"var _jsxFileName = \"/Users/apple/wbdv-sp21-cr-client-react/src/components/module-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport EditableItem from \"./editable-item\";\nimport { useParams } from \"react-router-dom\";\nimport moduleService from \"../services/module-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModuleList = ({\n  myModules = [],\n  createModule = () => alert(\"Create Module 234\"),\n  deleteModule = item => alert(\"delete \" + item._id),\n  updateModule,\n  findModulesForCourse = courseId => console.log(courseId)\n}) => {\n  _s();\n\n  const {\n    courseId,\n    moduleId\n  } = useParams();\n  useEffect(() => {\n    // alert(courseId)\n    findModulesForCourse(courseId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Modules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [myModules.map(module => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item ${module._id === moduleId ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(EditableItem, {\n          to: `/courses/editor/${courseId}/${module._id}`,\n          updateItem: updateModule,\n          deleteItem: deleteModule,\n          active: true,\n          item: module\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => createModule(courseId),\n          className: \"fas fa-plus fa-2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModuleList, \"SGAL504k1+OzbgzvYT/LEZns2sA=\", false, function () {\n  return [useParams];\n});\n\n_c = ModuleList;\n\nconst stpm = state => {\n  return {\n    myModules: state.moduleReducer.modules\n  };\n};\n\nconst dtpm = dispatch => {\n  return {\n    createModule: courseId => {\n      moduleService.createModuleForCourse(courseId, {\n        title: \"New Module\"\n      }).then(theActualModule => dispatch({\n        type: \"CREATE_MODULE\",\n        module: theActualModule\n      }));\n    },\n    deleteModule: item => moduleService.deleteModule(item._id).then(status => dispatch({\n      type: \"DELETE_MODULE\",\n      moduleToDelete: item\n    })),\n    updateModule: module => moduleService.updateModule(module._id, module).then(status => dispatch({\n      type: \"UPDATE_MODULE\",\n      module\n    })),\n    findModulesForCourse: courseId => {\n      // alert(courseId);\n      moduleService.findModulesForCourse(courseId).then(theModules => dispatch({\n        type: \"FIND_MODULES_FOR_COURSE\",\n        modules: theModules\n      }));\n    }\n  };\n};\n\nexport default connect(stpm, dtpm)(ModuleList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleList\");","map":{"version":3,"sources":["/Users/apple/wbdv-sp21-cr-client-react/src/components/module-list.js"],"names":["React","useEffect","connect","EditableItem","useParams","moduleService","ModuleList","myModules","createModule","alert","deleteModule","item","_id","updateModule","findModulesForCourse","courseId","console","log","moduleId","map","module","stpm","state","moduleReducer","modules","dtpm","dispatch","createModuleForCourse","title","then","theActualModule","type","status","moduleToDelete","theModules"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport EditableItem from \"./editable-item\";\nimport {useParams} from \"react-router-dom\";\nimport moduleService from \"../services/module-service\"\n\nconst ModuleList = (\n    {\n        myModules=[],\n        createModule=() => alert(\"Create Module 234\"),\n        deleteModule=(item) => alert(\"delete \" + item._id),\n        updateModule,\n        findModulesForCourse=(courseId) => console.log(courseId)\n    }) => {\n    const {courseId, moduleId} = useParams();\n    useEffect(() => {\n        // alert(courseId)\n        findModulesForCourse(courseId)\n    }, [])\n    return(\n        <div>\n            <h2>Modules</h2>\n            <ul className=\"list-group\">\n                {\n                    myModules.map(module =>\n                        <li className={`list-group-item ${module._id === moduleId ? 'active' : ''}`}>\n                            <EditableItem\n                                to={`/courses/editor/${courseId}/${module._id}`}\n                                updateItem={updateModule}\n                                deleteItem={deleteModule}\n                                active={true}\n                                item={module}/>\n                        </li>\n                    )\n                }\n                <li className=\"list-group-item\">\n                    <i onClick={() => createModule(courseId)} className=\"fas fa-plus fa-2x\"></i>\n                </li>\n            </ul>\n        </div>)}\n\nconst stpm = (state) => {\n    return {\n        myModules: state.moduleReducer.modules\n    }\n}\nconst dtpm = (dispatch) => {\n    return {\n        createModule: (courseId) => {\n            moduleService.createModuleForCourse(courseId, {title: \"New Module\"})\n                .then(theActualModule => dispatch({\n                    type: \"CREATE_MODULE\",\n                    module: theActualModule\n                }))\n        },\n        deleteModule: (item) =>\n            moduleService.deleteModule(item._id)\n                .then(status => dispatch({\n                    type: \"DELETE_MODULE\",\n                    moduleToDelete: item\n                })),\n        updateModule: (module) =>\n            moduleService.updateModule(module._id, module)\n                .then(status => dispatch({\n                    type: \"UPDATE_MODULE\",\n                    module\n                })),\n        findModulesForCourse: (courseId) => {\n            // alert(courseId);\n            moduleService.findModulesForCourse(courseId)\n                .then(theModules => dispatch({\n                    type: \"FIND_MODULES_FOR_COURSE\",\n                    modules: theModules\n                }))\n        }\n    }\n}\n\nexport default connect(stpm, dtpm)\n(ModuleList)"]},"metadata":{},"sourceType":"module"}