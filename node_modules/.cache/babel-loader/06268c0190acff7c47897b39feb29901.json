{"ast":null,"code":"var _jsxFileName = \"/Users/apple/wbdv-sp21-cr-client-react/src/components/topic-pills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport EditableItem from \"./editable-item\";\nimport { useParams } from \"react-router-dom\";\nimport topicService from \"../services/topic-service\";\nimport lessonService from \"../services/lesson-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopicPills = ({\n  topics = [{\n    _id: \"123\",\n    title: \"Topic A\"\n  }, {\n    _id: \"123\",\n    title: \"Topic B\"\n  }, {\n    _id: \"123\",\n    title: \"Topic C\"\n  }],\n  findTopicsForLesson,\n  createTopic,\n  deleteTopic,\n  updateTopic\n}) => {\n  _s();\n\n  const {\n    courseId,\n    moduleId,\n    lessonId,\n    topicId,\n    layout\n  } = useParams();\n  useEffect(() => {\n    console.log(\"LOAD TOPICS FOR LESSON: \" + lessonId);\n\n    if (lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") {\n      findTopicsForLesson(lessonId);\n    }\n  }, [lessonId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav nav-pills\",\n      children: [topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(EditableItem, {\n          to: `/courses/${layout}/edit/${courseId}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`,\n          deleteItem: deleteTopic,\n          updateItem: updateTopic,\n          active: topic._id === topicId,\n          item: topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => createTopic(lessonId),\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicPills, \"Bsc8AG3z86l1l2mppyrVzleVXj0=\", false, function () {\n  return [useParams];\n});\n\n_c = TopicPills;\n\nconst stpm = state => ({\n  topics: state.topicReducer.topics\n});\n\nconst dtpm = dispatch => ({\n  findTopicsForLesson: lessonId => {\n    console.log(\"LOAD TOPICS FOR LESSON:\");\n    console.log(lessonId);\n    topicService.findTopicsForLesson(lessonId).then(topics => dispatch({\n      type: \"FIND_TOPICS\",\n      topics\n    }));\n  },\n  createTopic: lessonId => {\n    console.log(\"CREATE TOPIC FOR LESSON: \" + lessonId);\n    topicService.createTopicForLesson(lessonId, {\n      title: \"New Topic\"\n    }).then(topic => dispatch({\n      type: \"CREATE_TOPIC\",\n      topic\n    }));\n  },\n  deleteTopic: topicId => {\n    console.log(\"DELETE TOPIC FOR LESSON: \" + topicId);\n    topicService.deleteTopicForLesson(topicId._id).then(topics => dispatch({\n      type: \"DELETE_TOPIC\",\n      topicToDelete: topicId\n    }));\n  },\n  updateTopic: topic => topicService.updateTopicForLesson(topic._id, topic).then(status => dispatch({\n    type: \"UPDATE_TOPIC\",\n    topic\n  }))\n});\n\nexport default connect(stpm, dtpm)(TopicPills);\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicPills\");","map":{"version":3,"sources":["/Users/apple/wbdv-sp21-cr-client-react/src/components/topic-pills.js"],"names":["React","useEffect","connect","EditableItem","useParams","topicService","lessonService","TopicPills","topics","_id","title","findTopicsForLesson","createTopic","deleteTopic","updateTopic","courseId","moduleId","lessonId","topicId","layout","console","log","map","topic","stpm","state","topicReducer","dtpm","dispatch","then","type","createTopicForLesson","deleteTopicForLesson","topicToDelete","updateTopicForLesson","status"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from \"react-redux\";\nimport EditableItem from \"./editable-item\";\nimport {useParams} from \"react-router-dom\";\nimport topicService from \"../services/topic-service\";\nimport lessonService from \"../services/lesson-service\";\n\n\nconst TopicPills = (\n    {\n        topics=[\n            {_id: \"123\", title: \"Topic A\"},\n            {_id: \"123\", title: \"Topic B\"},\n            {_id: \"123\", title: \"Topic C\"}\n        ],\n        findTopicsForLesson,\n        createTopic,\n        deleteTopic,\n        updateTopic\n    }) => {\n    const {courseId, moduleId, lessonId, topicId,layout} = useParams();\n    useEffect(() => {\n        console.log(\"LOAD TOPICS FOR LESSON: \" + lessonId)\n        if(lessonId !== \"undefined\" && typeof lessonId !== \"undefined\") {\n            findTopicsForLesson(lessonId)\n        }\n    }, [lessonId])\n    return(\n        <div>\n            <h2>Topics</h2>\n            <ul className=\"nav nav-pills\">\n                {\n                    topics.map(topic =>\n                        <li className=\"nav-item\">\n                            <EditableItem\n                                to={`/courses/${layout}/edit/${courseId}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`}\n                                deleteItem={deleteTopic}\n                                updateItem={updateTopic}\n                                active={topic._id === topicId}\n                                item={topic}/>\n                        </li>\n                    )\n                }\n                <li>\n                    <i onClick={() => createTopic(lessonId)} className=\"fas fa-plus\"></i>\n                </li>\n            </ul>\n        </div>)}\n\nconst stpm = (state) => ({\n    topics: state.topicReducer.topics\n})\nconst dtpm = (dispatch) => ({\n    findTopicsForLesson: (lessonId) => {\n        console.log(\"LOAD TOPICS FOR LESSON:\")\n        console.log(lessonId)\n        topicService.findTopicsForLesson(lessonId)\n            .then(topics => dispatch({\n                type: \"FIND_TOPICS\",\n                topics\n            }))\n    },\n    createTopic: (lessonId) => {\n        console.log(\"CREATE TOPIC FOR LESSON: \" + lessonId)\n        topicService\n            .createTopicForLesson(lessonId, {title: \"New Topic\"})\n            .then(topic => dispatch({\n                type: \"CREATE_TOPIC\",\n                topic\n            }))\n    },\n    deleteTopic: (topicId) => {\n        console.log(\"DELETE TOPIC FOR LESSON: \" + topicId)\n        topicService\n            .deleteTopicForLesson(topicId._id)\n            .then(topics => dispatch({\n                type: \"DELETE_TOPIC\",\n                topicToDelete: topicId\n            }))\n    },\n    updateTopic: (topic) =>\n        topicService\n            .updateTopicForLesson(topic._id, topic)\n            .then(status => dispatch({\n                type: \"UPDATE_TOPIC\",\n                topic\n            })),\n})\n\nexport default connect(stpm, dtpm)(TopicPills)"]},"metadata":{},"sourceType":"module"}